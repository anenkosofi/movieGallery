{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-1116802942ae71bb.js","node_modules/@parcel/runtime-js/lib/runtime-8101b21c863353f7.js","src/js-partials/movie-service.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"5ZPII\\\":\\\"index.b3aba27f.js\\\",\\\"frxiO\\\":\\\"placeholder.2262f4e0.png\\\"}\"));","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"frxiO\")).toString();","import defaultImage from '../images/placeholder.png';\nconst API_KEY = 'bfcd7a06a5bb09fb5aafe756d2f60f73';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst movieList = document.querySelector('.movie-list');\nconst paginationList = document.querySelector('.pagination-list');\nconst paginationContainer = document.querySelector('.pagination');\nconst bodyRect = document.querySelector('body').getBoundingClientRect();\nconst modalWindow = document.querySelector('.information');\nconst backdrop = document.querySelector('.backdrop');\nconst closeButton = document.querySelector('.close-button');\n\nmovieList.addEventListener('click', onModalWindowOpen);\ncloseButton.addEventListener('click', onModalWindowClose);\nbackdrop.addEventListener('click', onBackdropClick);\n\nfetchMovies()\n  .then(({ results }) => {\n    let pageNumber = 1;\n    renderMovieList(results);\n    makePagination(pageNumber);\n    makeButtonDisabled(pageNumber);\n    makeButtonActive(pageNumber);\n\n    paginationList.addEventListener('click', onButtonClick);\n    const backwardButton = document.querySelector('.arrow-left');\n    const forwardButton = document.querySelector('.arrow-right');\n    backwardButton.addEventListener('click', onBackwardButtonClick);\n    forwardButton.addEventListener('click', onForwardButtonClick);\n  })\n  .catch(error => console.log(error));\n\nfunction onBackwardButtonClick() {\n  const buttons = document.querySelectorAll('.pagination-button');\n  [...buttons].map(button => {\n    if (button.classList.contains('active')) {\n      const currentPageNumber = Number(button.textContent);\n      const pageNumberToClick = currentPageNumber - 1;\n      fetchMovies(pageNumberToClick)\n        .then(({ results }) => {\n          renderMovieList(results);\n        })\n        .catch(error => console.log(error));\n      clearMarkup(paginationList);\n      makePagination(pageNumberToClick);\n      makeButtonDisabled(pageNumberToClick);\n      makeButtonActive(pageNumberToClick);\n    }\n  });\n}\n\nfunction onForwardButtonClick() {\n  const buttons = document.querySelectorAll('.pagination-button');\n  [...buttons].map(button => {\n    if (button.classList.contains('active')) {\n      const currentPageNumber = Number(button.textContent);\n      const pageNumberToClick = currentPageNumber + 1;\n      fetchMovies(pageNumberToClick)\n        .then(({ results }) => {\n          renderMovieList(results);\n        })\n        .catch(error => console.log(error));\n      clearMarkup(paginationList);\n      makePagination(pageNumberToClick);\n      makeButtonDisabled(pageNumberToClick);\n      makeButtonActive(pageNumberToClick);\n    }\n  });\n}\n\nfunction makeButtonDisabled(pageNumber) {\n  const firstChild = paginationContainer.firstElementChild;\n  const lastChild = paginationContainer.lastElementChild;\n  if (pageNumber === 1) {\n    firstChild.disabled = 'true';\n    if (lastChild.hasAttribute('disabled')) {\n      lastChild.removeAttribute('disabled');\n    }\n  } else if (pageNumber === 20) {\n    lastChild.disabled = 'true';\n    if (firstChild.hasAttribute('disabled')) {\n      firstChild.removeAttribute('disabled');\n    }\n  } else {\n    if (firstChild.hasAttribute('disabled')) {\n      console.log(firstChild.hasAttribute('disabled'));\n      firstChild.removeAttribute('disabled');\n    }\n    if (lastChild.hasAttribute('disabled')) {\n      lastChild.removeAttribute('disabled');\n    }\n  }\n}\n\nasync function fetchMovies(page = 1) {\n  const response = await fetch(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=${page}`\n  );\n  if (!response.ok) {\n    throw new Error(response.status);\n  }\n  return await response.json();\n}\n\nasync function fetchMovieDetails(movieId) {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n  if (!response.ok) {\n    throw new Error(response.status);\n  }\n  return await response.json();\n}\n\nconst genres = {\n  12: 'Adventure',\n  14: 'Fantasy',\n  16: 'Animation',\n  18: 'Drama',\n  27: 'Horror',\n  28: 'Action',\n  35: 'Comedy',\n  36: 'History',\n  37: 'Western',\n  53: 'Thriller',\n  80: 'Crime',\n  99: 'Documentary',\n  878: 'Sci-Fi',\n  9648: 'Mystery',\n  10402: 'Music',\n  10749: 'Romance',\n  10751: 'Family',\n  10752: 'War',\n  10770: 'TV Movie',\n};\n\nfunction genresIdConverter(genreIds) {\n  return (genreIds = genreIds\n    .map(genreId => (genreId = genres[genreId]))\n    .slice(0, 3)\n    .join(', '));\n}\n\nfunction getFullYear(date) {\n  const year = new Date(date).getFullYear();\n\n  return year;\n}\n\nfunction roundAverageVote(vote) {\n  const roundedVote = vote.toFixed(1);\n  return roundedVote;\n}\n\nfunction checkImageSrc(src) {\n  if (src) {\n    return `src=\"https://image.tmdb.org/t/p/w500${src}\"`;\n  }\n  return `src=\"${defaultImage}\"`;\n}\n\nfunction renderMovieList(movies) {\n  const markup = movies\n    .map(\n      ({ id, poster_path, title, genre_ids, release_date, vote_average }) =>\n        `<li class=\"movie-list__item\" data-id=\"${id}\">\n            <img class=\"movie-image\" ${checkImageSrc(\n              poster_path\n            )} alt=\"Movie poster\" loading=\"lazy\" />\n            <div class=\"movie-descr\">\n              <h2 class=\"movie-title\">${title || 'Unknown'}</h2>\n              <p class=\"movie-info\">${\n                genresIdConverter(genre_ids) || 'Other'\n              } | ${\n          getFullYear(release_date) || 'Unknown'\n        }<span class=\"vote-average\">${roundAverageVote(vote_average)}</span></p>\n            </div>\n        </li>`\n    )\n    .join('');\n  movieList.innerHTML = markup;\n}\n\nfunction buttonMarkup(array) {\n  const markup = array\n    .map(\n      pageNumber =>\n        `<li class=\"pagination-item\">\n          <button class=\"pagination-button\" type=\"button\">${pageNumber}</button>\n        </li>`\n    )\n    .join('');\n\n  return markup;\n}\n\nfunction makePagination(quantity) {\n  let buttonArray = [];\n  let paginationMarkup = '';\n  let numberOfButtons = 0;\n  const dots =\n    '<li class=\"pagination-item\"><button class=\"pagination-button\" type=\"button\">...</button></li>';\n  const firstButton =\n    '<li class=\"pagination-item\"><button class=\"pagination-button\" type=\"button\">1</button></li>';\n\n  const lastButton =\n    '<li class=\"pagination-item\"><button class=\"pagination-button\" type=\"button\">20</button></li>';\n\n  if (quantity >= 1 && quantity <= 3) {\n    numberOfButtons = 5;\n    for (let i = 1; i <= numberOfButtons; i += 1) {\n      buttonArray.push(i);\n    }\n    if (bodyRect.width < 768) {\n      const markup = buttonMarkup(buttonArray);\n      paginationMarkup = `${markup}`;\n    } else {\n      const markup = buttonMarkup(buttonArray);\n      paginationMarkup = `${markup} ${dots} ${lastButton}`;\n    }\n  } else if (quantity > 3 && quantity < 18) {\n    numberOfButtons = quantity + 2;\n    const startButton = quantity - 2;\n    for (let i = startButton; i <= numberOfButtons; i += 1) {\n      buttonArray.push(i);\n    }\n    if (bodyRect.width < 768) {\n      const markup = buttonMarkup(buttonArray);\n      paginationMarkup = `${markup}`;\n    } else {\n      const markup = buttonMarkup(buttonArray);\n      paginationMarkup = `${firstButton} ${dots} ${markup} ${dots} ${lastButton}`;\n    }\n  } else if (quantity >= 18) {\n    for (let i = 16; i <= 20; i += 1) {\n      buttonArray.push(i);\n    }\n    if (bodyRect.width < 768) {\n      const markup = buttonMarkup(buttonArray);\n      paginationMarkup = `${markup}`;\n    } else {\n      const markup = buttonMarkup(buttonArray);\n      paginationMarkup = `${firstButton} ${dots} ${markup}`;\n    }\n  }\n\n  paginationList.innerHTML = paginationMarkup;\n}\n\nfunction makeButtonActive(number) {\n  const buttons = document.querySelectorAll('.pagination-button');\n  [...buttons].map(button => {\n    if (button.classList.contains('active')) {\n      button.classList.remove('active');\n    }\n    if (Number(button.textContent) === number) {\n      button.classList.add('active');\n    }\n  });\n}\n\nfunction clearMarkup(container) {\n  container.innerHTML = '';\n}\n\nfunction onButtonClick(e) {\n  if (e.target.nodeName !== 'BUTTON') {\n    return;\n  }\n  if (e.target.textContent) {\n    const pageNumber = Number(e.target.textContent);\n    clearMarkup(movieList);\n    fetchMovies(pageNumber)\n      .then(({ results }) => {\n        renderMovieList(results);\n      })\n      .catch(error => console.log(error));\n    clearMarkup(paginationList);\n    makePagination(pageNumber);\n    makeButtonDisabled(pageNumber);\n    makeButtonActive(pageNumber);\n  }\n}\n\nfunction onModalWindowOpen(e) {\n  let movieId = 0;\n  if (e.target.closest('li')) {\n    movieId = e.target.closest('li').dataset.id;\n  }\n\n  clearMarkup(modalWindow);\n  fetchMovieDetails(movieId)\n    .then(movie => renderMovieModal(movie))\n    .catch(error => console.log(error));\n\n  backdrop.classList.remove('is-hidden');\n\n  document.addEventListener('keydown', onEscClose);\n}\n\nfunction renderMovieModal({\n  genres,\n  original_title,\n  overview,\n  popularity,\n  poster_path,\n  title,\n  vote_average,\n  vote_count,\n}) {\n  const markup = `<img ${checkImageSrc(poster_path)} alt=\"Movie poster\"  />\n    <div class=\"movie-details\">\n      <h3 class=\"movie-heading\">${title}</h3>\n      <ul class=\"movie-list-info\">\n        <li class=\"movie-list-info__item\">\n          <p class=\"movie-testimonial\">Vote / Votes</p>\n          <p class=\"movie-mark\">\n            <span class=\"rating\">${roundAverageVote(\n              vote_average\n            )}</span><span class=\"delimeter\">/</span\n            ><span class=\"quantity\">${vote_count}</span>\n          </p>\n        </li>\n        <li class=\"movie-list-info__item\">\n          <p class=\"movie-testimonial\">Popularity</p>\n          <p class=\"movie-mark\">${roundAverageVote(popularity)}</p>\n        </li>\n        <li class=\"movie-list-info__item\">\n          <p class=\"movie-testimonial\">Original Title</p>\n          <p class=\"movie-mark movie-mark--original-title\">${original_title}</p>\n        </li>\n        <li class=\"movie-list-info__item\">\n          <p class=\"movie-testimonial\">Genre</p>\n          <p class=\"movie-mark\">${genres\n            .map(genre => genre.name)\n            .join(', ')}</p>\n        </li>\n      </ul>\n      <p class=\"about\">About</p>\n      <p class=\"about-descr\">${overview}</p>\n      <div class=\"button-wrapper button-wrapper--modal\">\n        <button class=\"button modal-button\" type=\"button\">\n          Add to watched\n        </button>\n        <button\n          class=\"button queue modal-button modal-button-queue\"\n          type=\"button\"\n        >\n          Add to queue\n        </button>\n      </div>\n    </div>`;\n\n  modalWindow.innerHTML = markup;\n}\n\nfunction onModalWindowClose() {\n  backdrop.classList.add('is-hidden');\n}\n\nfunction onBackdropClick(e) {\n  if (e.currentTarget === e.target) {\n    onModalWindowClose();\n  }\n}\n\nfunction onEscClose(e) {\n  if (e.code === 'Escape') {\n    document.removeEventListener('keydown', onEscClose);\n    onModalWindowClose();\n  }\n}\n"],"names":["$ef7689007096c8a0$export$6503ec6e8aabbaf","$ef7689007096c8a0$export$f7ad0328861e2f03","$ef7689007096c8a0$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$1268fd4ee4f1c2ff$exports","URL","resolve","import","meta","url","toString","$903bde950ad783c1$var$movieList","document","querySelector","$903bde950ad783c1$var$paginationList","$903bde950ad783c1$var$paginationContainer","$903bde950ad783c1$var$bodyRect","getBoundingClientRect","$903bde950ad783c1$var$modalWindow","$903bde950ad783c1$var$backdrop","$903bde950ad783c1$var$closeButton","$903bde950ad783c1$var$onBackwardButtonClick","querySelectorAll","map","button","classList","contains","pageNumberToClick","Number","textContent","$903bde950ad783c1$var$fetchMovies","then","results","$903bde950ad783c1$var$renderMovieList","catch","error","console","log","$903bde950ad783c1$var$clearMarkup","$903bde950ad783c1$var$makePagination","$903bde950ad783c1$var$makeButtonDisabled","$903bde950ad783c1$var$makeButtonActive","$903bde950ad783c1$var$onForwardButtonClick","pageNumber","firstChild","firstElementChild","lastChild","lastElementChild","disabled","hasAttribute","removeAttribute","async","page","response","fetch","ok","status","json","addEventListener","e","movieId","target","closest","dataset","$903bde950ad783c1$var$fetchMovieDetails","movie","genres","genres1","original_title","overview","popularity","poster_path","title","vote_average","vote_count","markup","$903bde950ad783c1$var$checkImageSrc","$903bde950ad783c1$var$roundAverageVote","genre","name","join","innerHTML","$903bde950ad783c1$var$renderMovieModal","remove","$903bde950ad783c1$var$onEscClose","$903bde950ad783c1$var$onModalWindowClose","currentTarget","$903bde950ad783c1$var$onButtonClick","backwardButton","forwardButton","$903bde950ad783c1$var$genres","vote","toFixed","src","$parcel$interopDefault","movies","genre_ids","release_date","genreIds","genreId","slice","date","Date","getFullYear","$903bde950ad783c1$var$buttonMarkup","array","quantity","buttonArray","paginationMarkup","numberOfButtons","dots","firstButton","lastButton","push","width","number","add","container","nodeName","code","removeEventListener"],"version":3,"file":"index.b3aba27f.js.map"}