{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SCAA,MAAMC,EAAYC,SAASC,cAAc,eAElC,SAASC,EAA2BC,GACzC,MAAMC,EAASD,EACZE,KACC,EAACC,GAAEA,EAAEC,WAAEA,EAAUC,KAAEA,EAAIC,MAAEA,EAAKC,OAAEA,EAAMC,YAAEA,KACtC,yCAAyCL,kDACLC,yHAEJE,mEACkBC,mCACpCF,sCAAyCG,oDAI1DC,KAAK,IACRb,EAAUc,UAAYT,C,CChBjB,SAASU,IAGdd,SACGC,cAAc,WACdc,kBAAkBC,mBAAmB,WAHtC,sL,CFEJ,MAAMC,EAAYjB,SAASC,cAAc,eACnCiB,EAAalB,SAASC,cAAc,gBAI1C,WACEgB,EAAUE,UAAUC,IAAI,YACxB,EAAAvB,EAAAwB,aAAYJ,GACZC,EAAWC,UAAUC,IAAI,aACzBpB,SAASC,cAAc,yBAAyBkB,UAAUC,IAAI,aAC9D,MAAME,EAAkBC,KAAKC,MAAMC,aAAaC,QAAQ,YACxD,GAAIJ,GAAmBA,EAAgBK,OAAQ,CAC7C,MAAMC,EAAiB5B,SAASC,cAAc,sBAC1C2B,GACFA,EAAeC,SACf3B,EAA2BoB,IAE3BpB,EAA2BoB,E,KAExB,CAEL,GADuBtB,SAASC,cAAc,sBAE5C,OAEFa,G,EArBJgB,GGPAjC,EAAAC,EAAA,SAIA,MAAMiC,EAAY/B,SAASC,cAAc,eACnC+B,EAAgBhC,SAASC,cAAc,gCACvCgC,EAAajC,SAASC,cAAc,eAE1C+B,EAAcE,iBAAiB,SAExB,SAAwBC,GAC7BJ,EAAUZ,UAAUC,IAAI,WAGxB,GAFsB,YAElBe,EAAEC,OAAOC,QAAQ,UAAUC,QAAQC,KAAwB,CAC7DvC,SAASC,cAAc,yBAAyBkB,UAAUC,IAAI,aAC9DpB,SAASC,cAAc,uBAAuBkB,UAAUU,OAAO,aAC/D,MAAMW,EAAkB,WACxB,EAAA3C,EAAAwB,aAAYU,GACZE,EAAWd,UAAUC,IAAI,aACzB,MAAME,EAAkBC,KAAKC,MAAMC,aAAaC,QAAQc,IACxD,GAAIlB,GAAmBA,EAAgBK,OAAQ,CAC7C,MAAMC,EAAiB5B,SAASC,cAAc,sBAC1C2B,GACFA,EAAeC,SACf3B,EAA2BoB,IAE3BpB,EAA2BoB,E,KAExB,CAEL,GADuBtB,SAASC,cAAc,sBAE5C,OAEAa,G,OAGC,GAxBa,UAwBTqB,EAAEC,OAAOC,QAAQ,UAAUC,QAAQC,KAAsB,CAClEvC,SAASC,cAAc,uBAAuBkB,UAAUC,IAAI,aAC5DpB,SACGC,cAAc,yBACdkB,UAAUU,OAAO,aACpB,MAAMW,EAAkB,SACxB,EAAA3C,EAAAwB,aAAYU,GACZE,EAAWd,UAAUC,IAAI,aACzB,MAAMqB,EAAclB,KAAKC,MAAMC,aAAaC,QAAQc,IACpD,GAAIC,GAAeA,EAAYd,OAAQ,CACrC,MAAMC,EAAiB5B,SAASC,cAAc,sBAC1C2B,GACFA,EAAeC,SACf3B,EAA2BuC,IAE3BvC,EAA2BuC,E,KAExB,CAEL,GADuBzC,SAASC,cAAc,sBAE5C,OAEFa,G","sources":["src/js-partials/library/onLibraryPageLoad.js","src/js-partials/library/renderMovieListInMyLibrary.js","src/js-partials/library/renderDefaultPicture.js","src/js-partials/library/onButtonClick.js"],"sourcesContent":["import { clearMarkup } from '../home/clearMarkup';\nimport { renderMovieListInMyLibrary } from './renderMovieListInMyLibrary';\nimport { renderDefaultPicture } from './renderDefaultPicture';\n\nconst movieList = document.querySelector('.movie-list');\nconst pagination = document.querySelector('.pagination');\n\nonLibraryPageLoad();\n\nfunction onLibraryPageLoad() {\n  movieList.classList.add('library');\n  clearMarkup(movieList);\n  pagination.classList.add('is-hidden');\n  document.querySelector('[data-name=\"watched\"]').classList.add('is-active');\n  const moviesToWatched = JSON.parse(localStorage.getItem('watched'));\n  if (moviesToWatched && moviesToWatched.length) {\n    const defaultPicture = document.querySelector('.default-container');\n    if (defaultPicture) {\n      defaultPicture.remove();\n      renderMovieListInMyLibrary(moviesToWatched);\n    } else {\n      renderMovieListInMyLibrary(moviesToWatched);\n    }\n  } else {\n    const defaultPicture = document.querySelector('.default-container');\n    if (defaultPicture) {\n      return;\n    }\n    renderDefaultPicture();\n  }\n}\n","const movieList = document.querySelector('.movie-list');\n\nexport function renderMovieListInMyLibrary(movies) {\n  const markup = movies\n    .map(\n      ({ id, posterPath, year, title, genres, voteAverage }) =>\n        `<li class=\"movie-list__item\" data-id=\"${id}\">\n            <img class=\"movie-image\" src=\"${posterPath}\" alt=\"Movie poster\" loading=\"lazy\" />\n            <div class=\"movie-descr\">\n              <h2 class=\"movie-title\">${title}</h2>\n              <p class=\"movie-info\"><span class=\"genre\">${genres} |</span>\n              <span>${year}</span><span class=\"vote-average\">${voteAverage}</span></p>\n            </div>\n        </li>`\n    )\n    .join('');\n  movieList.innerHTML = markup;\n}\n","export function renderDefaultPicture() {\n  const markup =\n    '<div class=\"default-container\"><img src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/t-3/tumbleweed.svg\" alt=\"\" class=\"mover tumbleweed bouncy\" /><div class=\"shadow\"></div></div>';\n  document\n    .querySelector('section')\n    .firstElementChild.insertAdjacentHTML('afterend', markup);\n}\n","import { clearMarkup } from '../home/clearMarkup';\nimport { renderMovieListInMyLibrary } from './renderMovieListInMyLibrary';\nimport { renderDefaultPicture } from './renderDefaultPicture';\n\nconst movieList = document.querySelector('.movie-list');\nconst headerButtons = document.querySelector('[data-name=\"header-wrapper\"]');\nconst pagination = document.querySelector('.pagination');\n\nheaderButtons.addEventListener('click', onDisplayMovie);\n\nexport function onDisplayMovie(e) {\n  movieList.classList.add('library');\n  const watchedButton = 'watched';\n  const queueButton = 'queue';\n  if (e.target.closest('button').dataset.name === watchedButton) {\n    document.querySelector('[data-name=\"watched\"]').classList.add('is-active');\n    document.querySelector('[data-name=\"queue\"]').classList.remove('is-active');\n    const localStorageKey = 'watched';\n    clearMarkup(movieList);\n    pagination.classList.add('is-hidden');\n    const moviesToWatched = JSON.parse(localStorage.getItem(localStorageKey));\n    if (moviesToWatched && moviesToWatched.length) {\n      const defaultPicture = document.querySelector('.default-container');\n      if (defaultPicture) {\n        defaultPicture.remove();\n        renderMovieListInMyLibrary(moviesToWatched);\n      } else {\n        renderMovieListInMyLibrary(moviesToWatched);\n      }\n    } else {\n      const defaultPicture = document.querySelector('.default-container');\n      if (defaultPicture) {\n        return;\n      } else {\n        renderDefaultPicture();\n      }\n    }\n  } else if (e.target.closest('button').dataset.name === queueButton) {\n    document.querySelector('[data-name=\"queue\"]').classList.add('is-active');\n    document\n      .querySelector('[data-name=\"watched\"]')\n      .classList.remove('is-active');\n    const localStorageKey = 'queue';\n    clearMarkup(movieList);\n    pagination.classList.add('is-hidden');\n    const moviesQueue = JSON.parse(localStorage.getItem(localStorageKey));\n    if (moviesQueue && moviesQueue.length) {\n      const defaultPicture = document.querySelector('.default-container');\n      if (defaultPicture) {\n        defaultPicture.remove();\n        renderMovieListInMyLibrary(moviesQueue);\n      } else {\n        renderMovieListInMyLibrary(moviesQueue);\n      }\n    } else {\n      const defaultPicture = document.querySelector('.default-container');\n      if (defaultPicture) {\n        return;\n      }\n      renderDefaultPicture();\n    }\n  }\n}\n"],"names":["$9WIO2","parcelRequire","$dfb8007a2832c7b1$var$movieList","document","querySelector","$dfb8007a2832c7b1$export$a4d338b85baac950","movies","markup","map","id","posterPath","year","title","genres","voteAverage","join","innerHTML","$e2294ff150c2c8d2$export$1258ce1c4ab30f03","firstElementChild","insertAdjacentHTML","$8025104ee14dc25c$var$movieList","$8025104ee14dc25c$var$pagination","classList","add","clearMarkup","moviesToWatched","JSON","parse","localStorage","getItem","length","defaultPicture","remove","$8025104ee14dc25c$var$onLibraryPageLoad","$2e393156319993ea$var$movieList","$2e393156319993ea$var$headerButtons","$2e393156319993ea$var$pagination","addEventListener","e","target","closest","dataset","name","localStorageKey","moviesQueue"],"version":3,"file":"my-library.2ba84f17.js.map"}